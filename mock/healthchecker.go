// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/common-healthcheck (interfaces: HealthChecker)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	json "encoding/json"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// HealthChecker is a mock of HealthChecker interface
type HealthChecker struct {
	ctrl     *gomock.Controller
	recorder *HealthCheckerMockRecorder
}

// HealthCheckerMockRecorder is the mock recorder for HealthChecker
type HealthCheckerMockRecorder struct {
	mock *HealthChecker
}

// NewHealthChecker creates a new mock instance
func NewHealthChecker(ctrl *gomock.Controller) *HealthChecker {
	mock := &HealthChecker{ctrl: ctrl}
	mock.recorder = &HealthCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *HealthChecker) EXPECT() *HealthCheckerMockRecorder {
	return m.recorder
}

// HealthCheck mocks base method
func (m *HealthChecker) HealthCheck(arg0 context.Context, arg1 string) (json.RawMessage, error) {
	ret := m.ctrl.Call(m, "HealthCheck", arg0, arg1)
	ret0, _ := ret[0].(json.RawMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HealthCheck indicates an expected call of HealthCheck
func (mr *HealthCheckerMockRecorder) HealthCheck(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*HealthChecker)(nil).HealthCheck), arg0, arg1)
}
