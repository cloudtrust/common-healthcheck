// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/common-healthcheck (interfaces: InfluxClient)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -destination=./mock/influx.go -package=mock -mock_names=InfluxClient=InfluxClient github.com/cloudtrust/common-healthcheck InfluxClient
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// InfluxClient is a mock of InfluxClient interface.
type InfluxClient struct {
	ctrl     *gomock.Controller
	recorder *InfluxClientMockRecorder
	isgomock struct{}
}

// InfluxClientMockRecorder is the mock recorder for InfluxClient.
type InfluxClientMockRecorder struct {
	mock *InfluxClient
}

// NewInfluxClient creates a new mock instance.
func NewInfluxClient(ctrl *gomock.Controller) *InfluxClient {
	mock := &InfluxClient{ctrl: ctrl}
	mock.recorder = &InfluxClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *InfluxClient) EXPECT() *InfluxClientMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *InfluxClient) Ping(timeout time.Duration) (time.Duration, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", timeout)
	ret0, _ := ret[0].(time.Duration)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Ping indicates an expected call of Ping.
func (mr *InfluxClientMockRecorder) Ping(timeout any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*InfluxClient)(nil).Ping), timeout)
}
